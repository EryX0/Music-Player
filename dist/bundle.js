/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (() => {

eval("\nconst songName = document.querySelector(\".song-name\");\nconst artistName = document.querySelector(\".artist-name\");\nconst coverImage = document.querySelector(\"img\");\nconst backward = document.querySelectorAll(\"i\")[0];\nconst playPause = document.querySelectorAll(\"i\")[1];\nconst forward = document.querySelectorAll(\"i\")[2];\nconst timeline = document.querySelector(\".time-line\");\nconst filler = document.querySelector(\".filler\");\nconst audio = document.querySelector(\"audio\");\nconst time = document.querySelector(\".song-time\");\nconst currentTime = document.querySelector(\".current-time\");\nconst body = document.querySelector(\"body\");\nconst playerBox = document.querySelector(\".player-box\");\nconst content = document.querySelector(\".content\");\nlet songs = [\n    {\n        id: 0,\n        name: \"Believer\",\n        artist: \"Imagine Dragons\",\n        cover: \"../images/Imagine-Dragons-Believer-art.jpg\",\n        src: \"../songs/01 Believer.mp3\",\n        background: \"../videos/believergif.gif\",\n    },\n    {\n        id: 1,\n        name: \"Goodbyes\",\n        artist: \"Post Malone\",\n        cover: \"../images/Post_Malone_-_Hollywood's_Bleeding.png\",\n        src: \"../songs/2_5323735572550780476.mp3\",\n        background: \"../videos/goodbyesgif.gif\",\n    },\n    {\n        id: 2,\n        name: \"Paid My Dues\",\n        artist: \"NF\",\n        cover: \"../images/NF_Clouds_(The_Mixtape)_album_cover.png\",\n        src: \"../songs/10 PAID MY DUES.mp3\",\n        background: \"../videos/nfgif.gif\",\n    },\n    {\n        id: 3,\n        name: \"Blinding Lights\",\n        artist: \"The Weeknd\",\n        cover: \"../images/The_Weeknd_-_Blinding_Lights.png\",\n        src: \"../songs/The Weeknd - Blinding Lights.mp3\",\n        background: \"../videos/blindinglightgif.gif\",\n    },\n    {\n        id: 4,\n        name: \"GraveYard\",\n        artist: \"Halsey\",\n        cover: \"../images/Halsey_-_Graveyard.png\",\n        src: \"../songs/Halsey - Graveyard (2019) MELOVAZ.NET.mp3\",\n        background: \"../videos/graveyardgif.gif\",\n    },\n    {\n        id: 5,\n        name: \"What I've Done\",\n        artist: \"Linkin Park\",\n        cover: \"../images/Minutes_to_Midnight_cover.jpg\",\n        src: \"../songs/07 What I've Done.mp3\",\n        background: \"../videos/whativedonegif.gif\",\n    },\n];\nconsole.log(JSON.stringify(songs));\nlet songIndex = 0;\nlet kornometer;\nplayPause.addEventListener(\"click\", playPauseHandler);\nforward.addEventListener(\"click\", nextMusic);\nbackward.addEventListener(\"click\", previousSong);\ntimeline.addEventListener(\"click\", selectTime);\nplayerBox.addEventListener(\"click\", firstShowHandler);\nplayerBox.addEventListener(\"mouseover\", hoverHandler);\nplayerBox.addEventListener(\"mouseout\", unHoverHandler);\nplayerBox.addEventListener(\"animationend\", animationHandler);\nfunction playPauseHandler() {\n    if (playPause.classList.contains(\"fa-circle-play\")) {\n        playSong();\n    }\n    else {\n        pauseSong();\n    }\n}\nfunction playSong() {\n    playPause.classList.remove(\"fa-circle-play\");\n    playPause.classList.add(\"fa-circle-pause\");\n    audio.play();\n    kornometer = setInterval(currentTimeHandler, 1000);\n}\nfunction pauseSong() {\n    playPause.classList.remove(\"fa-circle-pause\");\n    playPause.classList.add(\"fa-circle-play\");\n    audio.pause();\n    clearInterval(kornometer);\n}\nfunction setSongData() {\n    coverImage.setAttribute(\"src\", songs[songIndex].cover);\n    songName.innerText = songs[songIndex].name;\n    artistName.innerText = songs[songIndex].artist;\n    audio.setAttribute(\"src\", songs[songIndex].src);\n    audio.addEventListener(\"loadeddata\", function () {\n        time.innerText = convertTime(audio.duration);\n    });\n    currentTime.innerText = \"00:00\";\n    body.style.backgroundImage = \"url(\" + songs[songIndex].background + \")\";\n    if (playPause.classList.contains(\"fa-circle-pause\")) {\n        playPauseHandler();\n    }\n    filler.style.left = \"-100%\";\n}\nfunction nextMusic() {\n    songIndex++;\n    if (songIndex >= songs.length) {\n        songIndex = 0;\n    }\n    setSongData();\n}\nfunction previousSong() {\n    songIndex--;\n    if (songIndex < 0) {\n        songIndex = songs.length - 1;\n    }\n    setSongData();\n}\nfunction currentTimeHandler() {\n    currentTime.innerText = convertTime(audio.currentTime);\n    fillerHandler();\n    if (audio.duration === audio.currentTime) {\n        clearInterval(kornometer);\n    }\n}\nfunction fillerHandler() {\n    const total = audio.currentTime;\n    const songTime = audio.duration;\n    const percent = 100 - (total / songTime) * 100;\n    filler.style.left = \"-\" + percent + \"%\";\n}\nfunction convertTime(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    let second = Math.floor(seconds % 60);\n    if (second < 10) {\n        second = \"0\" + second;\n    }\n    return \"0\" + minutes + \":\" + second;\n}\nfunction selectTime(event) {\n    const start = (document.body.clientWidth - 456) / 2 + (456 * 7.5) / 100;\n    const current = event.clientX - start;\n    const percent = 100 - (current / timeline.offsetWidth) * 100;\n    filler.style.left = \"-\" + percent + \"%\";\n    audio.currentTime = ((100 - percent) * audio.duration) / 100;\n    currentTime.innerHTML = convertTime(audio.currentTime);\n}\nfunction hoverHandler() {\n    playerBox.style.backgroundColor = \"rgb(45, 118, 187)\";\n    playerBox.style.cursor = \"pointer\";\n    playerBox.style.boxShadow =\n        \"1px 1px 2px black, 0 0 5px rgb(13, 44, 5), 0 0 5px rgba(1, 139, 30, 0.614)\";\n}\nfunction unHoverHandler() {\n    playerBox.style.backgroundColor = \"rgba(121, 240, 168,0)\";\n    playerBox.style.border = \"4px solid rgb(45, 118, 187)\";\n    playerBox.style.cursor = \"default\";\n    playerBox.style.boxShadow = \"\";\n}\nfunction firstShowHandler() {\n    playerBox.style.backgroundColor = \"rgba(237, 255, 242,0)\";\n    playerBox.style.border = \"2px solid rgb(45, 118, 187)\";\n    playerBox.style.boxShadow = \"\";\n    playerBox.style.animation = \"first-show 3s\";\n    playerBox.removeEventListener(\"mouseover\", hoverHandler);\n    playerBox.removeEventListener(\"mouseout\", unHoverHandler);\n    playerBox.removeEventListener(\"click\", firstShowHandler);\n    playerBox.style.cursor = \"default\";\n    playerBox.style.width = \"456px\";\n    playerBox.style.height = \"80%\";\n    playerBox.style.transition = \"all 1s\";\n    content.style.animation = \"fade-in 2s\";\n    playerBox.style.boxShadow = \"\";\n}\nfunction animationHandler() {\n    playerBox.style.border = \"none\";\n    playerBox.style.boxShadow = \"\";\n    body.style.backgroundImage = \"url('../videos/believergif.gif')\";\n    playerBox.style.backgroundColor = \"rgba(90, 133, 105, 0.178)\";\n    content.style.display = \"block\";\n    content.style.visibility = \"visible\";\n    content.style.opacity = \"1\";\n}\n\n\n//# sourceURL=webpack://music-player/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;